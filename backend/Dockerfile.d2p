FROM node:20-alpine

WORKDIR /app

RUN mkdir -p my_packages

COPY ../prep/my_packages /app/my_packages

RUN npm i ./my_packages/backend-*.tgz
RUN npm -D i /app/my_packages/types-bcryptjs-*.tgz
RUN npm -D i /app/my_packages/types-cookie-parser-*.tgz
RUN npm -D i /app/my_packages/types-cors-*.tgz
RUN npm -D i /app/my_packages/types-express-*.tgz
RUN npm -D i /app/my_packages/types-jsonwebtoken-*.tgz
RUN npm -D i /app/my_packages/types-mysql-*.tgz
RUN npm -D i /app/my_packages/types-node-*.tgz
RUN npm -D i /app/my_packages/types-nodemailer-*.tgz
RUN npm -D i /app/my_packages/ts-node-*.tgz
RUN npm -D i /app/my_packages/typescript-*.tgz
RUN npm -D i /app/my_packages/types-express-serve-static-core-*.tgz

COPY ./src /app/src/
COPY package.json /app/
COPY package-lock.json /app/
COPY tsconfig.json /app/tsconfig.json

RUN rm -rf my_packages

RUN diff package.json ./node_modules/backend/package.json || exit 1

RUN mv /app/node_modules/backend/node_modules/* /app/node_modules
RUN npx tsc

# EXPOSE 3000

# Create a new user `appuser` and assign it to `tmsgroup`
RUN adduser --disabled-password --no-create-home appuser

# Switch to the new user `appuser`
USER appuser  

# Entry point when container spins up

CMD ["node", "dist/index.js"]

